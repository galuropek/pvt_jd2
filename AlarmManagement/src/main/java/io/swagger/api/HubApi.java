/**
 * NOTE: This class is auto generated by the swagger code generator program (2.4.1-SNAPSHOT).
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */
package io.swagger.api;

import io.swagger.model.Hub;
import io.swagger.annotations.*;
import org.springframework.http.ResponseEntity;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestHeader;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RequestPart;
import org.springframework.web.multipart.MultipartFile;

import javax.validation.Valid;
import javax.validation.constraints.*;
import java.util.List;
@javax.annotation.Generated(value = "io.swagger.codegen.languages.SpringCodegen", date = "2019-01-06T21:03:59.754+03:00")

@Api(value = "hub", description = "the hub API")
public interface HubApi {

    @ApiOperation(value = "hubCreate", nickname = "hubCreate", notes = "", response = Hub.class, tags={ "hub", })
    @ApiResponses(value = { 
        @ApiResponse(code = 201, message = "Hub", response = Hub.class) })
    @RequestMapping(value = "/hub",
        produces = { "application/json" }, 
        consumes = { "application/json" },
        method = RequestMethod.POST)
    ResponseEntity<Hub> hubCreate(@ApiParam(value = "" ,required=true )  @Valid @RequestBody Hub hub);


    @ApiOperation(value = "hubDelete", nickname = "hubDelete", notes = "", tags={ "hub", })
    @ApiResponses(value = { 
        @ApiResponse(code = 204, message = "Success") })
    @RequestMapping(value = "/hub/{hubId}",
        produces = { "application/json" }, 
        consumes = { "application/json" },
        method = RequestMethod.DELETE)
    ResponseEntity<Void> hubDelete(@ApiParam(value = "",required=true) @PathVariable("hubId") String hubId);


    @ApiOperation(value = "hubFind", nickname = "hubFind", notes = "", response = Hub.class, responseContainer = "List", tags={ "hub", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "List of Hub", response = Hub.class, responseContainer = "List") })
    @RequestMapping(value = "/hub",
        produces = { "application/json" }, 
        consumes = { "application/json" },
        method = RequestMethod.GET)
    ResponseEntity<List<Hub>> hubFind();


    @ApiOperation(value = "hubGet", nickname = "hubGet", notes = "", response = Hub.class, tags={ "hub", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Hub", response = Hub.class) })
    @RequestMapping(value = "/hub/{hubId}",
        produces = { "application/json" }, 
        consumes = { "application/json" },
        method = RequestMethod.GET)
    ResponseEntity<Hub> hubGet(@ApiParam(value = "",required=true) @PathVariable("hubId") String hubId);

}
